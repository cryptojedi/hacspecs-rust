use hacspec::prelude::*;

use hacspecs::aes::*;

fn enc_dec_test(m: ByteSlice, key: Key, iv: Nonce, ctr: u32, ctxt: Option<ByteSlice>) {
    let c = aes128_encrypt(key, iv, ctr, m);
    let m_dec = aes128_decrypt(key, iv, ctr, c.get_slice());
    assert_eq!(m, m_dec.get_slice());
    if ctxt.is_some() {
        assert_eq!(c.get_slice(), ctxt.unwrap());
    }
}

#[test]
fn test_enc_dec() {
    let key = Key::random();
    let iv = Nonce::random();
    let m = Bytes::random(40);
    enc_dec_test(m.get_slice(), key, iv, 0, None);
}

#[test]
fn test_kat1() {
    let msg = Bytes::from(vec![
        0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17,
        0x2a,
    ]);
    let key = Key::from([
        0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f,
        0x3c,
    ]);
    let nonce = Nonce::from([
        0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,
    ]);
    let ctr = 0xfcfdfeff;
    let ctxt = Bytes::from(vec![
        0x87, 0x4d, 0x61, 0x91, 0xb6, 0x20, 0xe3, 0x26, 0x1b, 0xef, 0x68, 0x64, 0x99, 0x0d, 0xb6,
        0xce,
    ]);
    enc_dec_test(msg.get_slice(), key, nonce, ctr, Some(ctxt.get_slice()));
}

#[test]
fn test_kat2() {
    let msg = Bytes::from(vec![
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
        0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D,
        0x1E, 0x1F,
    ]);
    let key = Key::from([
        0x7E, 0x24, 0x06, 0x78, 0x17, 0xFA, 0xE0, 0xD7, 0x43, 0xD6, 0xCE, 0x1F, 0x32, 0x53, 0x91,
        0x63,
    ]);
    let nonce = Nonce::from([
        0x00, 0x6C, 0xB6, 0xDB, 0xC0, 0x54, 0x3B, 0x59, 0xDA, 0x48, 0xD9, 0x0B,
    ]);
    let ctr = 0x00000001;
    let ctxt = Bytes::from(vec![
        0x51, 0x04, 0xA1, 0x06, 0x16, 0x8A, 0x72, 0xD9, 0x79, 0x0D, 0x41, 0xEE, 0x8E, 0xDA, 0xD3,
        0x88, 0xEB, 0x2E, 0x1E, 0xFC, 0x46, 0xDA, 0x57, 0xC8, 0xFC, 0xE6, 0x30, 0xDF, 0x91, 0x41,
        0xBE, 0x28,
    ]);
    enc_dec_test(msg.get_slice(), key, nonce, ctr, Some(ctxt.get_slice()));
}
